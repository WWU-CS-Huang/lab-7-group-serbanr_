/*
 * This source file was generated by the Gradle 'init' task
 */
package lab7;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Map;
import java.util.Scanner;


public class Huffman 
{
    // Handles main program run of passing in text file
    // and calling to other huffman methods

    public static void main(String[] args)
    {
        if (args.length < 1)
        {
            System.err.println("Please enter a filename!");
            System.exit(1);
        }

        String file = args[0];
        StringBuilder input = new StringBuilder();

        try
        {
            Scanner scanner = new Scanner(new File(file));
            while (scanner.hasNextLine())
            {
                input.append(scanner.nextLine()).append("\n");
            }
        }
        catch (FileNotFoundException e)
        {
            System.err.println("File " + file + " not present in lab7 directory!");
            return;
        }
        
        String fileText = input.toString(); 
        Map<Character, Integer> frequencies = FrequencyCount.count(fileText);

        HuffmanTree tree = new HuffmanTree(frequencies);
        Map<Character, String> encoderMap = tree.buildEncodeMap();

        String encoded = Codec.encode(fileText, encoderMap);
        String decoded = Codec.decode(encoded, tree.getRoot());


        // handling for less than 100 words case
        if (input.length() < 100)
        {
            System.out.println(input);
            System.out.println(encoded);
            System.out.println(decoded);
        }

        boolean match = input.equals(decoded);
        System.out.println(match);

        //Calculate compression ratio
        double compressionRatio = (double) encoded.length() / (input.length() * 8.0);
        System.out.println(compressionRatio);


        
    }
}
